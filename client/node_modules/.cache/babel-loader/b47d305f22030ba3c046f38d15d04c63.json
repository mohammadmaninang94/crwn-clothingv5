{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohammad.maninang\\\\Desktop\\\\my-projects\\\\crown-clothing\\\\client\\\\src\\\\components\\\\cart-dropdown\\\\cart-dropdown.component.jsx\";\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport CartItem from '../cart-item/cart-item.component';\nimport { CartDropdownContainer, CartDropdownItems, CartDropdownButton, CartDropdownEmptyMessage } from './cart-dropdown.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => /*#__PURE__*/_jsxDEV(CartDropdownContainer, {\n  children: [/*#__PURE__*/_jsxDEV(CartDropdownItems, {\n    itemsCount: cartItems.length,\n    children: cartItems.length ? cartItems.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      item: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(CartDropdownEmptyMessage, {\n      children: \"You cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this), cartItems.length ? /*#__PURE__*/_jsxDEV(CartDropdownButton, {\n    onClick: () => {\n      history.push('/checkout');\n      dispatch(toggleCartHidden());\n    },\n    children: \"go to checkout\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this) : null]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 5\n}, this);\n\n_c = CartDropdown;\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropdown\");","map":{"version":3,"sources":["C:/Users/mohammad.maninang/Desktop/my-projects/crown-clothing/client/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["connect","createStructuredSelector","withRouter","selectCartItems","toggleCartHidden","CartItem","CartDropdownContainer","CartDropdownItems","CartDropdownButton","CartDropdownEmptyMessage","CartDropdown","cartItems","history","dispatch","length","map","item","id","push","mapStateToProps"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AAEA,OAAOC,QAAP,MAAqB,kCAArB;AAEA,SACIC,qBADJ,EAC2BC,iBAD3B,EAEIC,kBAFJ,EAEwBC,wBAFxB,QAGO,wBAHP;;;AAKA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,kBACjB,QAAC,qBAAD;AAAA,0BACI,QAAC,iBAAD;AAAmB,IAAA,UAAU,EAAEF,SAAS,CAACG,MAAzC;AAAA,cACKH,SAAS,CAACG,MAAV,GACGH,SAAS,CAACI,GAAV,CAAcC,IAAI,iBACd,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA;AAA9B,OAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,YADJ,CADH,gBAIG,QAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,UADJ,EASKN,SAAS,CAACG,MAAV,gBACG,QAAC,kBAAD;AAAoB,IAAA,OAAO,EAAE,MAAM;AAC/BF,MAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,MAAAA,QAAQ,CAACT,gBAAgB,EAAjB,CAAR;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH,GAKG,IAdR;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMM,Y;AAmBN,MAAMS,eAAe,GAAGlB,wBAAwB,CAAC;AAC7CU,EAAAA,SAAS,EAAER;AADkC,CAAD,CAAhD;AAIA,eAAeD,UAAU,CAACF,OAAO,CAACmB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\r\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\r\n\r\nimport CartItem from '../cart-item/cart-item.component';\r\n\r\nimport {\r\n    CartDropdownContainer, CartDropdownItems,\r\n    CartDropdownButton, CartDropdownEmptyMessage\r\n} from './cart-dropdown.styles';\r\n\r\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\r\n    <CartDropdownContainer>\r\n        <CartDropdownItems itemsCount={cartItems.length}>\r\n            {cartItems.length ?\r\n                cartItems.map(item => (\r\n                    <CartItem key={item.id} item={item} />\r\n                )) :\r\n                <CartDropdownEmptyMessage>You cart is empty</CartDropdownEmptyMessage>\r\n            }\r\n        </CartDropdownItems>\r\n        {cartItems.length ? (\r\n            <CartDropdownButton onClick={() => {\r\n                history.push('/checkout');\r\n                dispatch(toggleCartHidden());\r\n            }}>go to checkout</CartDropdownButton>\r\n        ) : null}\r\n    </CartDropdownContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}