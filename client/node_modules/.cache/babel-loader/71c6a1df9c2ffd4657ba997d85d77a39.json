{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohammad.maninang\\\\Desktop\\\\my-projects\\\\crown-clothing\\\\client\\\\src\\\\components\\\\stripe-button\\\\stripe-button.component.jsx\",\n    _s = $RefreshSig$();\n\nimport StripeCheckout from 'react-stripe-checkout';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { clearCart } from '../../redux/cart/cart.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripeKey = 'pk_test_51GrdPxGXQEpKYmCgqpBcsxmOHkFPCIIGBaxpXOB5cqDtcwDm3C5GcZFQoIWiA3NgHpyFBTHBPDW0kTCFMQAeCE6a003uQm1GaR';\n\nconst StripeButton = ({\n  total\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const priceForStripe = total * 100;\n  const currencyForStripe = 'PHP';\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        currency: currencyForStripe,\n        token\n      }\n    }).then(response => {\n      alert('Successful payment');\n      dispatch(clearCart());\n    }).catch(error => {\n      console.log({\n        error\n      });\n      alert('Please use the provided test credit card.');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(StripeCheckout, {\n    name: \"CRWN Clothing Ltd.\",\n    description: `Your total price is ${total}`,\n    amount: priceForStripe,\n    currency: currencyForStripe,\n    stripeKey: stripeKey,\n    shippingAddress: true,\n    billingAddress: true,\n    token: onToken\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StripeButton, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = StripeButton;\nexport default StripeButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeButton\");","map":{"version":3,"sources":["C:/Users/mohammad.maninang/Desktop/my-projects/crown-clothing/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["StripeCheckout","useDispatch","axios","clearCart","stripeKey","StripeButton","total","dispatch","priceForStripe","currencyForStripe","onToken","token","url","method","data","amount","currency","then","response","alert","catch","error","console","log"],"mappings":";;;AAAA,OAAOA,cAAP,MAA2B,uBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,+BAA1B;;AAEA,MAAMC,SAAS,GAAG,6GAAlB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAChC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAMO,cAAc,GAAGF,KAAK,GAAG,GAA/B;AACA,QAAMG,iBAAiB,GAAG,KAA1B;;AAEA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACrBT,IAAAA,KAAK,CAAC;AACFU,MAAAA,GAAG,EAAE,SADH;AAEFC,MAAAA,MAAM,EAAE,MAFN;AAGFC,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEP,cADN;AAEFQ,QAAAA,QAAQ,EAAEP,iBAFR;AAGFE,QAAAA;AAHE;AAHJ,KAAD,CAAL,CAQGM,IARH,CAQQC,QAAQ,IAAI;AAChBC,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAZ,MAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACH,KAXD,EAWGiB,KAXH,CAWSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,QAAAA;AAAF,OAAZ;AACAF,MAAAA,KAAK,CAAC,2CAAD,CAAL;AACH,KAdD;AAeH,GAhBD;;AAkBA,sBACI,QAAC,cAAD;AACI,IAAA,IAAI,EAAC,oBADT;AAEI,IAAA,WAAW,EAAG,uBAAsBb,KAAM,EAF9C;AAGI,IAAA,MAAM,EAAEE,cAHZ;AAII,IAAA,QAAQ,EAAEC,iBAJd;AAKI,IAAA,SAAS,EAAEL,SALf;AAMI,IAAA,eAAe,MANnB;AAOI,IAAA,cAAc,MAPlB;AAQI,IAAA,KAAK,EAAEM;AARX;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CApCD;;GAAML,Y;UACeJ,W;;;KADfI,Y;AAsCN,eAAeA,YAAf","sourcesContent":["import StripeCheckout from 'react-stripe-checkout';\r\nimport { useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport { clearCart } from '../../redux/cart/cart.actions';\r\n\r\nconst stripeKey = 'pk_test_51GrdPxGXQEpKYmCgqpBcsxmOHkFPCIIGBaxpXOB5cqDtcwDm3C5GcZFQoIWiA3NgHpyFBTHBPDW0kTCFMQAeCE6a003uQm1GaR';\r\n\r\nconst StripeButton = ({ total }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const priceForStripe = total * 100;\r\n    const currencyForStripe = 'PHP';\r\n\r\n    const onToken = token => {\r\n        axios({\r\n            url: 'payment',\r\n            method: 'post',\r\n            data: {\r\n                amount: priceForStripe,\r\n                currency: currencyForStripe,\r\n                token\r\n            }\r\n        }).then(response => {\r\n            alert('Successful payment');\r\n            dispatch(clearCart());\r\n        }).catch(error => {\r\n            console.log({ error });\r\n            alert('Please use the provided test credit card.')\r\n        });\r\n    }\r\n\r\n    return (\r\n        <StripeCheckout\r\n            name='CRWN Clothing Ltd.'\r\n            description={`Your total price is ${total}`}\r\n            amount={priceForStripe}\r\n            currency={currencyForStripe}\r\n            stripeKey={stripeKey}\r\n            shippingAddress\r\n            billingAddress\r\n            token={onToken}\r\n        />\r\n    )\r\n};\r\n\r\nexport default StripeButton;"]},"metadata":{},"sourceType":"module"}