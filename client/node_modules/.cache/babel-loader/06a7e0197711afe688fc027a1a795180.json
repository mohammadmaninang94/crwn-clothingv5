{"ast":null,"code":"import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport shopActionTypes from './shop.types';\nexport function* fetchCollections() {\n  try {\n    const collectionsRef = firestore.collection('collections');\n    const collectionsSnapshot = yield collectionsRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, collectionsSnapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* onFetchCollectionStart() {\n  yield takeLatest(shopActionTypes.FETCHING_COLLECTIONS_START, fetchCollections);\n}\nexport default function* shopSagas() {\n  yield all([call(onFetchCollectionStart)]);\n}","map":{"version":3,"sources":["C:/Users/mohammad.maninang/Desktop/my-projects/crown-clothing/client/src/redux/shop/shop.sagas.js"],"names":["all","takeLatest","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","shopActionTypes","fetchCollections","collectionsRef","collection","collectionsSnapshot","get","collectionsMap","error","message","onFetchCollectionStart","FETCHING_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAMC,cAAc,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAvB;AACA,UAAMC,mBAAmB,GAAG,MAAMF,cAAc,CAACG,GAAf,EAAlC;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACG,+BAAD,EAAkCO,mBAAlC,CAAjC;AACA,UAAMT,GAAG,CAACG,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMZ,GAAG,CAACI,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,sBAAV,GAAmC;AACtC,QAAMhB,UAAU,CAACO,eAAe,CAACU,0BAAjB,EAA6CT,gBAA7C,CAAhB;AACH;AAED,eAAe,UAAUU,SAAV,GAAsB;AACjC,QAAMnB,GAAG,CAAC,CAACE,IAAI,CAACe,sBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { all, takeLatest, call, put } from 'redux-saga/effects';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\r\nimport shopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollections() {\r\n    try {\r\n        const collectionsRef = firestore.collection('collections');\r\n        const collectionsSnapshot = yield collectionsRef.get();\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, collectionsSnapshot);\r\n        yield put(fetchCollectionsSuccess(collectionsMap));\r\n    } catch (error) {\r\n        yield put(fetchCollectionsFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* onFetchCollectionStart() {\r\n    yield takeLatest(shopActionTypes.FETCHING_COLLECTIONS_START, fetchCollections);\r\n}\r\n\r\nexport default function* shopSagas() {\r\n    yield all([call(onFetchCollectionStart)])\r\n}"]},"metadata":{},"sourceType":"module"}