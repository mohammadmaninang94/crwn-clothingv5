{"ast":null,"code":"import { createSelector } from 'reselect';\nimport memoize from 'lodash.memoize';\n\nconst selectShop = state => state.shop;\n\nexport const selectShopCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectShopCollectionForPreview = createSelector([selectShopCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : null);\nexport const selectShopCollection = memoize(collectionParamUrl => createSelector([selectShopCollections], collections => collections ? collections[collectionParamUrl] : null));\nexport const selectIsCollectionsFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsCollectionsLoaded = createSelector([selectShopCollections], collection => !!collection);","map":{"version":3,"sources":["C:/Users/mohammad.maninang/Desktop/my-projects/crown-clothing/client/src/redux/shop/shop.selectors.js"],"names":["createSelector","memoize","selectShop","state","shop","selectShopCollections","collections","selectShopCollectionForPreview","Object","keys","map","key","selectShopCollection","collectionParamUrl","selectIsCollectionsFetching","isFetching","selectIsCollectionsLoaded","collection"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,qBAAqB,GAAGL,cAAc,CAC/C,CAACE,UAAD,CAD+C,EAE/CE,IAAI,IAAIA,IAAI,CAACE,WAFkC,CAA5C;AAKP,OAAO,MAAMC,8BAA8B,GAAGP,cAAc,CACxD,CAACK,qBAAD,CADwD,EAExDC,WAAW,IAAIA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAH,GAA2D,IAF7B,CAArD;AAKP,OAAO,MAAMC,oBAAoB,GAAGX,OAAO,CAACY,kBAAkB,IAAIb,cAAc,CAC5E,CAACK,qBAAD,CAD4E,EAE5EC,WAAW,IAAIA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IAFa,CAArC,CAApC;AAKP,OAAO,MAAMC,2BAA2B,GAAGd,cAAc,CACrD,CAACE,UAAD,CADqD,EAErDE,IAAI,IAAIA,IAAI,CAACW,UAFwC,CAAlD;AAKP,OAAO,MAAMC,yBAAyB,GAAGhB,cAAc,CACnD,CAACK,qBAAD,CADmD,EAEnDY,UAAU,IAAI,CAAC,CAACA,UAFmC,CAAhD","sourcesContent":["import { createSelector } from 'reselect';\r\nimport memoize from 'lodash.memoize';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectShopCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n);\r\n\r\nexport const selectShopCollectionForPreview = createSelector(\r\n    [selectShopCollections],\r\n    collections => collections ? Object.keys(collections).map(key => collections[key]) : null\r\n);\r\n\r\nexport const selectShopCollection = memoize(collectionParamUrl => createSelector(\r\n    [selectShopCollections],\r\n    collections => collections ? collections[collectionParamUrl] : null\r\n));\r\n\r\nexport const selectIsCollectionsFetching = createSelector(\r\n    [selectShop],\r\n    shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n    [selectShopCollections],\r\n    collection => !!collection\r\n);"]},"metadata":{},"sourceType":"module"}