{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohammad.maninang\\\\Desktop\\\\my-projects\\\\crown-clothing\\\\client\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { selectUserSignInMessage } from '../../redux/user/user.selectors';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { SignInContainer, SignInTitle, SignInParagraph, SignInButtonContainer } from './sign-in.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  errorMessage,\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setUserCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SignInTitle, {\n      className: \"sign-in__title\",\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SignInParagraph, {\n      className: \"sign-in__paragraph\",\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Email\",\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Password\",\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SignInButtonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          isGoogle: true,\n          onClick: googleSignInStart,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignIn, \"t+cryLFSxO/dvwJXoLz+Rhebfyc=\");\n\n_c = SignIn;\nconst mapStateToProps = createStructuredSelector({\n  errorMessage: selectUserSignInMessage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/mohammad.maninang/Desktop/my-projects/crown-clothing/client/src/components/sign-in/sign-in.component.jsx"],"names":["useState","connect","createStructuredSelector","googleSignInStart","emailSignInStart","selectUserSignInMessage","FormInput","CustomButton","SignInContainer","SignInTitle","SignInParagraph","SignInButtonContainer","SignIn","errorMessage","userCredentials","setUserCredentials","email","password","handleSubmit","event","preventDefault","handleChange","name","value","target","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\r\nimport { selectUserSignInMessage } from '../../redux/user/user.selectors';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport {\r\n    SignInContainer, SignInTitle,\r\n    SignInParagraph, SignInButtonContainer\r\n} from './sign-in.styles';\r\n\r\nconst SignIn = ({ errorMessage, emailSignInStart, googleSignInStart }) => {\r\n    const [userCredentials, setUserCredentials] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        emailSignInStart(email, password);\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        setUserCredentials({ ...userCredentials, [name]: value });\r\n    };\r\n\r\n    return (\r\n        <SignInContainer>\r\n            <SignInTitle className='sign-in__title'>I already have an account</SignInTitle>\r\n            <SignInParagraph className='sign-in__paragraph'>Sign in with your email and password</SignInParagraph>\r\n            <form onSubmit={handleSubmit}>\r\n                <FormInput\r\n                    label='Email'\r\n                    type='email'\r\n                    name='email'\r\n                    value={email}\r\n                    handleChange={handleChange}\r\n                    required />\r\n                <FormInput\r\n                    label='Password'\r\n                    type='password'\r\n                    name='password'\r\n                    value={password}\r\n                    handleChange={handleChange}\r\n                    required />\r\n                <SignInButtonContainer>\r\n                    <CustomButton type='submit'>Sign in</CustomButton>\r\n                    <CustomButton type='button' isGoogle onClick={googleSignInStart}>Sign in with Google</CustomButton>\r\n                </SignInButtonContainer>\r\n                <p>{errorMessage}</p>\r\n            </form>\r\n        </SignInContainer>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    errorMessage: selectUserSignInMessage\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}