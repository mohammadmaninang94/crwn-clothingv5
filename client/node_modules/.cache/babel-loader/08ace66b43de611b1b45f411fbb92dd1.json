{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohammad.maninang\\\\Desktop\\\\my-projects\\\\crown-clothing\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { selectUserSignUpMessage } from '../../redux/user/user.selectors';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { SignUpContainer, SignUpTitle, SignUpParagraph } from './sign-up.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({\n  signUp,\n  errorMessage\n}) => {\n  _s();\n\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password === confirmPassword) {\n      signUp({\n        displayName,\n        email,\n        password\n      });\n    } else {\n      alert(\"passwords don't match\");\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignUpContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SignUpTitle, {\n      children: \"I do not have a account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SignUpParagraph, {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Display Name\",\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Email\",\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Password\",\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Confrim Password\",\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sign-in__buttons\",\n        children: /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"3iisUMQZ6ptS0j1rUW56m9+jFVo=\");\n\n_c = SignUp;\nconst mapStateToProps = createStructuredSelector({\n  errorMessage: selectUserSignUpMessage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signUp: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/mohammad.maninang/Desktop/my-projects/crown-clothing/client/src/components/sign-up/sign-up.component.jsx"],"names":["useState","connect","createStructuredSelector","signUpStart","selectUserSignUpMessage","FormInput","CustomButton","SignUpContainer","SignUpTitle","SignUpParagraph","SignUp","signUp","errorMessage","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\nimport { selectUserSignUpMessage } from '../../redux/user/user.selectors';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { SignUpContainer, SignUpTitle, SignUpParagraph } from './sign-up.styles';\r\n\r\nconst SignUp = ({ signUp, errorMessage }) => {\r\n    const [userCredentials, setUserCredentials] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n    const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (password === confirmPassword) {\r\n            signUp({ displayName, email, password });\r\n        } else {\r\n            alert(\"passwords don't match\");\r\n        }\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        setUserCredentials({ ...userCredentials, [name]: value });\r\n    };\r\n\r\n    return (\r\n        <SignUpContainer>\r\n            <SignUpTitle>I do not have a account</SignUpTitle>\r\n            <SignUpParagraph>Sign up with your email and password</SignUpParagraph>\r\n            <form onSubmit={handleSubmit}>\r\n                <FormInput\r\n                    label='Display Name'\r\n                    type='text'\r\n                    name='displayName'\r\n                    value={displayName}\r\n                    handleChange={handleChange}\r\n                    required />\r\n                <FormInput\r\n                    label='Email'\r\n                    type='email'\r\n                    name='email'\r\n                    value={email}\r\n                    handleChange={handleChange}\r\n                    required />\r\n                <FormInput\r\n                    label='Password'\r\n                    type='password'\r\n                    name='password'\r\n                    value={password}\r\n                    handleChange={handleChange}\r\n                    required />\r\n                <FormInput\r\n                    label='Confrim Password'\r\n                    type='password'\r\n                    name='confirmPassword'\r\n                    value={confirmPassword}\r\n                    handleChange={handleChange}\r\n                    required />\r\n                <div className='sign-in__buttons'>\r\n                    <CustomButton type='submit'>Sign up</CustomButton>\r\n                </div>\r\n                <p>{errorMessage}</p>\r\n            </form>\r\n        </SignUpContainer>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    errorMessage: selectUserSignUpMessage\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUp: userCredentials => dispatch(signUpStart(userCredentials))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}